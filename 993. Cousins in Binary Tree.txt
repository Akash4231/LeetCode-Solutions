/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
   int level(TreeNode* root, int x,int ans)
   {
       if (root==NULL)
           return -1;
       
       if (root->val==x)
           return ans;
       
       else
       {    ans++;
           int l= level(root->left,x,ans);
           int r=level(root->right,x,ans);
            
            if (l==-1)
                return r;
            else
                return l;
           
       }
   }
    
    int parent(TreeNode* root, int x)
    {
        if (root==NULL || (root->left==NULL && root->right==NULL))
            return -1;
        
        if (root->left!=NULL && root->left->val==x)
            return root->val;
        
        else if (root->right!=NULL && root->right->val==x)
            return root->val;
        
        else
        { 
           int l= parent(root->left,x);
           int r= parent(root->right,x);
            
            if (l==-1)
                return r;
            else
                return l;
           
       }
    }
    
    bool isCousins(TreeNode* root, int x, int y) {
        
        int xlev=level(root,x,0);
        int ylev=level(root,y,0);
        int xpar=parent(root,x);
        int ypar=parent(root,y);
        
        //cout<<xlev<<"    "<<ylev<<"   "<<xpar<<"   "<<ypar;
        
        if (xlev==ylev && xpar!=ypar)
          return true;
        else
          return false;
        
        
        
    }
};