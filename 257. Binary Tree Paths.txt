/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    vector<string> ans;
    
    void bt (TreeNode* root,string str) {
        
        if (!root)  return;
        
        str+="->";
        str+=to_string(root->val);
        
        if (root->left==NULL && root->right==NULL){     
            ans.push_back(str);
            return;
        }
        
        bt(root->left,str);
        bt(root->right,str);
        
    }
    
    
    vector<string> binaryTreePaths(TreeNode* root) {
        
        if (!root)
            return {};
        
        if (!root->left && !root->right){
            string str="";
            str+=to_string(root->val);
            ans.push_back(str);
            return ans;
        }
        
        string str="";
        str+=to_string(root->val);
        
        //ans.push_back(str);
        bt(root->left,str);
        bt(root->right,str);
        return ans;
    }
};