/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode *t1=l1, *t2=l2, *t3=new ListNode(0);
        ListNode *cur=t3;
        int carry=0;
        while (t1!=NULL || t2!=NULL){
            int sum=carry;
            sum+=(t1==NULL)?0:(t1->val);
            sum+=(t2==NULL)?0:(t2->val);
            
            int t=sum;
            sum%=10;
            t/=10;
            carry=t;
            
            cur->next=new ListNode(sum);
            cur=cur->next;
            
            if (t1!=NULL)
                t1=t1->next;
            if (t2!=NULL)
                t2=t2->next;
        }
        if (carry!=0){
            cur->next=new ListNode(carry);
        }
        return t3->next;
    }
};